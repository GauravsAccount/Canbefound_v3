// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                              String           @id @default(cuid())
  name                            String           @default("")
  email                           String           @unique @default("")
  collegeId                       String           @unique @default("")
  password                        String
  role                            String?          @default("student")
  phone                           String           @default("")
  isVerified                      Boolean          @default(false)
  createdAt                       DateTime?        @default(now())
  lostItems                       LostItem[]       @relation("LostItem_reportedBy")
  foundItems                      FoundItem[]      @relation("FoundItem_reportedBy")
  claims                          Claim[]          @relation("Claim_claimant")
  bids                            Bid[]            @relation("Bid_bidder")
  from_Claim_reviewedBy           Claim[]          @relation("Claim_reviewedBy")
  from_Auction_winner             Auction[]        @relation("Auction_winner")
  from_Auction_createdBy          Auction[]        @relation("Auction_createdBy")
  from_ContactMessage_respondedBy ContactMessage[] @relation("ContactMessage_respondedBy")
  from_SystemSettings_updatedBy   SystemSettings[] @relation("SystemSettings_updatedBy")
}

model LostItem {
  id               String     @id @default(cuid())
  itemName         String     @default("")
  description      String     @default("")
  category         String
  status           String?    @default("active")
  lostDate         DateTime
  lostTime         String     @default("")
  location         String
  specificLocation String     @default("")
  circumstances    String     @default("")
  photo_id         String?
  photo_filesize   Int?
  photo_width      Int?
  photo_height     Int?
  photo_extension  String?
  contactEmail     String     @default("")
  contactPhone     String     @default("")
  privacyConsent   Boolean    @default(false)
  notifications    Boolean    @default(true)
  createdAt        DateTime?  @default(now())
  updatedAt        DateTime?  @default(now()) @updatedAt
  reportedBy       User?      @relation("LostItem_reportedBy", fields: [reportedById], references: [id])
  reportedById     String?    @map("reportedBy")
  claims           Claim[]    @relation("Claim_lostItem")
  matchedFoundItem FoundItem? @relation("FoundItem_matchedLostItem")

  @@index([reportedById])
}

model FoundItem {
  id                     String    @id @default(cuid())
  itemName               String    @default("")
  description            String    @default("")
  category               String
  status                 String?   @default("available")
  foundDate              DateTime
  foundTime              String    @default("")
  location               String
  specificLocation       String    @default("")
  photo_id               String?
  photo_filesize         Int?
  photo_width            Int?
  photo_height           Int?
  photo_extension        String?
  finderName             String    @default("")
  contactEmail           String    @default("")
  handoverLocation       String
  customHandoverLocation String    @default("")
  additionalNotes        String    @default("")
  verifyOwnership        Boolean   @default(true)
  handoverAgreement      Boolean   @default(true)
  daysUnclaimed          Int?      @default(0)
  createdAt              DateTime? @default(now())
  updatedAt              DateTime? @default(now()) @updatedAt
  reportedBy             User?     @relation("FoundItem_reportedBy", fields: [reportedById], references: [id])
  reportedById           String?   @map("reportedBy")
  claims                 Claim[]   @relation("Claim_foundItem")
  matchedLostItem        LostItem? @relation("FoundItem_matchedLostItem", fields: [matchedLostItemId], references: [id])
  matchedLostItemId      String?   @unique @map("matchedLostItem")
  auction                Auction?  @relation("Auction_item")

  @@index([reportedById])
}

model Claim {
  id                  String     @id @default(cuid())
  status              String?    @default("pending")
  proofOfOwnership    String     @default("")
  verificationDetails String     @default("")
  adminNotes          String     @default("")
  reviewedAt          DateTime?
  completedAt         DateTime?
  createdAt           DateTime?  @default(now())
  updatedAt           DateTime?  @default(now()) @updatedAt
  claimant            User?      @relation("Claim_claimant", fields: [claimantId], references: [id])
  claimantId          String?    @map("claimant")
  lostItem            LostItem?  @relation("Claim_lostItem", fields: [lostItemId], references: [id])
  lostItemId          String?    @map("lostItem")
  foundItem           FoundItem? @relation("Claim_foundItem", fields: [foundItemId], references: [id])
  foundItemId         String?    @map("foundItem")
  reviewedBy          User?      @relation("Claim_reviewedBy", fields: [reviewedById], references: [id])
  reviewedById        String?    @map("reviewedBy")

  @@index([claimantId])
  @@index([lostItemId])
  @@index([foundItemId])
  @@index([reviewedById])
}

model Auction {
  id            String     @id @default(cuid())
  title         String     @default("")
  description   String     @default("")
  startingPrice Int
  currentBid    Int?       @default(0)
  bidIncrement  Int?       @default(1)
  startTime     DateTime
  endTime       DateTime
  status        String?    @default("scheduled")
  bidCount      Int?       @default(0)
  reservePrice  Int?
  buyNowPrice   Int?
  createdAt     DateTime?  @default(now())
  updatedAt     DateTime?  @default(now()) @updatedAt
  item          FoundItem? @relation("Auction_item", fields: [itemId], references: [id])
  itemId        String?    @unique @map("item")
  bids          Bid[]      @relation("Bid_auction")
  winner        User?      @relation("Auction_winner", fields: [winnerId], references: [id])
  winnerId      String?    @map("winner")
  createdBy     User?      @relation("Auction_createdBy", fields: [createdById], references: [id])
  createdById   String?    @map("createdBy")

  @@index([winnerId])
  @@index([createdById])
}

model Bid {
  id         String    @id @default(cuid())
  amount     Int
  isWinning  Boolean   @default(false)
  isAutoBid  Boolean   @default(false)
  maxAutoBid Int?
  bidTime    DateTime? @default(now())
  auction    Auction?  @relation("Bid_auction", fields: [auctionId], references: [id])
  auctionId  String?   @map("auction")
  bidder     User?     @relation("Bid_bidder", fields: [bidderId], references: [id])
  bidderId   String?   @map("bidder")

  @@index([auctionId])
  @@index([bidderId])
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique @default("")
  description String    @default("")
  icon        String    @default("")
  isActive    Boolean   @default(true)
  sortOrder   Int?      @default(0)
  createdAt   DateTime? @default(now())
}

model Location {
  id          String    @id @default(cuid())
  name        String    @unique @default("")
  description String    @default("")
  building    String    @default("")
  floor       String    @default("")
  isActive    Boolean   @default(true)
  sortOrder   Int?      @default(0)
  createdAt   DateTime? @default(now())
}

model ContactMessage {
  id            String    @id @default(cuid())
  name          String    @default("")
  email         String    @default("")
  subject       String
  message       String    @default("")
  status        String?   @default("new")
  priority      String?   @default("medium")
  adminResponse String    @default("")
  respondedAt   DateTime?
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @default(now()) @updatedAt
  respondedBy   User?     @relation("ContactMessage_respondedBy", fields: [respondedById], references: [id])
  respondedById String?   @map("respondedBy")

  @@index([respondedById])
}

model SystemSettings {
  id           String    @id @default(cuid())
  settingKey   String    @unique @default("")
  settingValue String    @default("")
  description  String    @default("")
  dataType     String?   @default("string")
  isPublic     Boolean   @default(false)
  updatedAt    DateTime? @default(now()) @updatedAt
  updatedBy    User?     @relation("SystemSettings_updatedBy", fields: [updatedById], references: [id])
  updatedById  String?   @map("updatedBy")

  @@index([updatedById])
}
